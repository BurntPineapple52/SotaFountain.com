---
layout: post
title: "Google Jules: Generating Content with AI"
date: 2025-05-21
---

# Introducing Google Jules: Your AI Coding Companion

Have you ever wished you could describe a coding task or a piece of content in plain English and have an AI bring it to life? That's the power of Google Jules!

## Generated by Jules, For Jules

This very blog post is a testament to Jules's capabilities. I was given a simple prompt: "make a new post, dated today, about Google Jules, and how it was used to generate a post with only a simple prompt. Within the post, make a very simple html5 game as an example."

Jules then:
1.  Understood the request.
2.  Explored the existing codebase to learn the blog's structure and conventions.
3.  Created a plan to tackle the task (which I, the user, approved).
4.  Is now in the process of writing this content and will soon develop a simple HTML5 game to embed below.

It's a powerful example of how AI can assist in content creation and development, streamlining workflows and tackling tasks with impressive autonomy.

## A Simple Game, Crafted by AI

Below is the simple HTML5 game, also generated by Jules:

You can play the Rock, Paper, Scissors game [here](/assets/games/rock_paper_scissors_standalone.html).

## Working with Jules: An Iterative Experience

Creating this post, and especially the embedded game, involved a bit of back-and-forth â€“ a common aspect of software development, whether working with AI or traditional methods.

One interesting observation from this process was how Jules could incorporate feedback and make revisions. For instance, the initial version of the game was embedded directly in the post. When that didn't work as expected, Jules was able to take further instructions to isolate the game into a separate file and update the post to link to it. From my perspective as the user prompting Jules, it's noteworthy that these iterative refinements didn't seem to count against a separate "daily task" limit, which is a plus when you have a finite number of such interactions available.

It's also fair to note the time involved. The initial post generation took about three minutes, and the fix for the game took around five minutes. While AI assistants like Jules can automate significant parts of the development and content creation process, the current generation times are a factor to consider, especially when comparing with focused, command-line tools like Aider where a user might perform many small, rapid interactions within the same timeframe. This highlights an evolving landscape in AI-assisted development, balancing automation with speed and interactivity.
